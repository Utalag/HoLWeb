// <auto-generated />
using System;
using HoLWeb.DataLayer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HoLWeb.DataLayer.Migrations
{
    [DbContext(typeof(HoLWebDbContext))]
    [Migration("20250306211031_BindingApplicationDataToWorld")]
    partial class BindingApplicationDataToWorld
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserWorld", b =>
                {
                    b.Property<Guid>("PlayersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WorldsId")
                        .HasColumnType("int");

                    b.HasKey("PlayersId", "WorldsId");

                    b.HasIndex("WorldsId");

                    b.ToTable("Worlds_Players", (string)null);
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgilityStatId")
                        .HasColumnType("int");

                    b.Property<int>("CharismaStatId")
                        .HasColumnType("int");

                    b.Property<int>("ConstitutionStatId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntelligenceStatId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Mobility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NarrativeId")
                        .HasColumnType("int");

                    b.Property<int>("Profipoints")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("StrengthStatId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Visage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgilityStatId");

                    b.HasIndex("CharismaStatId");

                    b.HasIndex("ConstitutionStatId");

                    b.HasIndex("IntelligenceStatId");

                    b.HasIndex("NarrativeId");

                    b.HasIndex("StrengthStatId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgilityStatId = 37,
                            CharismaStatId = 40,
                            ConstitutionStatId = 38,
                            Description = "Lorem Ypsum",
                            IntelligenceStatId = 39,
                            Mobility = "[11,0]",
                            Name = "Tester",
                            NarrativeId = 1,
                            Profipoints = 20,
                            RaceId = 1,
                            StrengthStatId = 36,
                            Visage = "[12,0]"
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.GeneralAttributes.GeneralAttribut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Atribut")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDice")
                        .HasColumnType("int");

                    b.Property<int>("RangeHigh")
                        .HasColumnType("int");

                    b.Property<int>("RangeLow")
                        .HasColumnType("int");

                    b.Property<string>("class")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("AttributeStats");

                    b.HasDiscriminator<string>("class").HasValue("GeneralAttribut");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.IdentityModels.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<long>("Age")
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Narrative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Era")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NarrativeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NarrativeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorldId");

                    b.ToTable("Naratives");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Era = "Císaře C-Chou",
                            NarrativeDescription = "Příběh ve vzdálené číně",
                            NarrativeName = "Čína",
                            WorldId = 1,
                            Year = 679
                        },
                        new
                        {
                            Id = 2,
                            Era = "III",
                            NarrativeDescription = "Boje v Persii",
                            NarrativeName = "Řecko",
                            WorldId = 1,
                            Year = 679
                        },
                        new
                        {
                            Id = 3,
                            Era = "XXI",
                            NarrativeDescription = "podle Pc hry",
                            NarrativeName = "Warhammer",
                            WorldId = 2,
                            Year = 3754
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ProfessionModul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlchemiMana")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAlchemiMana")
                        .HasColumnType("bit");

                    b.Property<bool>("HasRengerMana")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSpecialdMana")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWizardMana")
                        .HasColumnType("bit");

                    b.Property<int>("HpRangeMax")
                        .HasColumnType("int");

                    b.Property<int>("HpRangeMin")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfiPoints")
                        .HasColumnType("int");

                    b.Property<int>("RengerMana")
                        .HasColumnType("int");

                    b.Property<int>("SpecialdMana")
                        .HasColumnType("int");

                    b.Property<int>("WizardMana")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Professions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlchemiMana = 0,
                            Description = "Zkušený bojovník, který se specializuje na zbraně a bojovou taktiku. Je fyzicky zdatný a často nosí těžké brnění. Válečníci vedou své spojence do bitvy a používají svou sílu a odvahu k ochraně ostatních. Jsou loajální a čestní, připravení postavit se jakékoli hrozbě.",
                            HasAlchemiMana = false,
                            HasRengerMana = false,
                            HasSpecialdMana = false,
                            HasWizardMana = false,
                            HpRangeMax = 10,
                            HpRangeMin = 1,
                            Level = 1,
                            Name = "Válečník",
                            ProfiPoints = 0,
                            RengerMana = 0,
                            SpecialdMana = 0,
                            WizardMana = 0
                        },
                        new
                        {
                            Id = 2,
                            AlchemiMana = 0,
                            Description = "Mistr magie, ovládající sílu živlů a starodávných kouzel. Často se věnuje studiu mystických textů a hledá tajemství ukrytá ve stínech. Kouzelníci jsou schopni léčit, klamat nepřátele nebo vytvářet ničivá kouzla. Jsou intelektuálně založení a často se spoléhají na svou moudrost a znalosti.",
                            HasAlchemiMana = false,
                            HasRengerMana = false,
                            HasSpecialdMana = false,
                            HasWizardMana = true,
                            HpRangeMax = 6,
                            HpRangeMin = 1,
                            Level = 1,
                            Name = "Kouzelník",
                            ProfiPoints = 0,
                            RengerMana = 0,
                            SpecialdMana = 0,
                            WizardMana = 7
                        },
                        new
                        {
                            Id = 3,
                            AlchemiMana = 9,
                            Description = "Vědec a badatel, který míchá elixíry a hledá tajemství transmutace. Alchymisté jsou známí svou schopností vytvářet léčivé lektvary, výbušniny a různé magické substance. Jejich práce často hraničí s tajemnem a někteří se snaží najít kámen mudrců. Je to povolání plné experimentů a objevů.",
                            HasAlchemiMana = true,
                            HasRengerMana = false,
                            HasSpecialdMana = false,
                            HasWizardMana = false,
                            HpRangeMax = 8,
                            HpRangeMin = 1,
                            Level = 1,
                            Name = "Alchymista",
                            ProfiPoints = 0,
                            RengerMana = 0,
                            SpecialdMana = 0,
                            WizardMana = 0
                        },
                        new
                        {
                            Id = 4,
                            AlchemiMana = 0,
                            Description = "Mistr lukostřelby a lovec, který se specializuje na střelbu z dálky. Lučištníci jsou rychlí a obratní, schopní zasáhnout nepřítele z velké vzdálenosti. Používají luky, kuše a střelné zbraně k ochraně svých spojenců a lovu zvěře. Jsou často samotáři a preferují život v divočině.",
                            HasAlchemiMana = false,
                            HasRengerMana = false,
                            HasSpecialdMana = false,
                            HasWizardMana = false,
                            HpRangeMax = 8,
                            HpRangeMin = 1,
                            Level = 1,
                            Name = "Lučištník",
                            ProfiPoints = 0,
                            RengerMana = 0,
                            SpecialdMana = 0,
                            WizardMana = 0
                        },
                        new
                        {
                            Id = 5,
                            AlchemiMana = 0,
                            Description = "Mistr lstí a skrytých operací, který se specializuje na krádeže a infiltraci. Je rychlý, tichý a vysoce obratný, což mu umožňuje snadno unikat nepřátelům. Zloději využívají své dovednosti k získávání informací a cenností. Jsou inteligentní a vynalézaví, často pracující ve stínu.",
                            HasAlchemiMana = false,
                            HasRengerMana = false,
                            HasSpecialdMana = false,
                            HasWizardMana = false,
                            HpRangeMax = 6,
                            HpRangeMin = 1,
                            Level = 1,
                            Name = "Zloděj",
                            ProfiPoints = 0,
                            RengerMana = 0,
                            SpecialdMana = 0,
                            WizardMana = 0
                        },
                        new
                        {
                            Id = 6,
                            AlchemiMana = 0,
                            Description = "Mistr přežití v divočině, který často slouží jako stopař a strážce. Má hluboké znalosti o přírodě a umí se pohybovat nepozorovaně. Hraničáři bývají vynikající lučištníci a lovci, kteří využívají svých dovedností k ochraně říše před nebezpečím. Spojují fyzickou zdatnost s bystrým instinktem.",
                            HasAlchemiMana = false,
                            HasRengerMana = true,
                            HasSpecialdMana = false,
                            HasWizardMana = false,
                            HpRangeMax = 7,
                            HpRangeMin = 1,
                            Level = 1,
                            Name = "Hraničář",
                            ProfiPoints = 0,
                            RengerMana = 0,
                            SpecialdMana = 0,
                            WizardMana = 0
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ProfessionSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaseProfessionPoint")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("CreatetByUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DependencySkillId")
                        .HasColumnType("int");

                    b.Property<string>("DependencySkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KnowledgeGroup")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionClass")
                        .HasColumnType("int");

                    b.Property<int>("SkillClass")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("ProfessionSkill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 8,
                            SkillName = "Sum range 23-24"
                        },
                        new
                        {
                            Id = 2,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 8,
                            SkillName = "Sum range 25"
                        },
                        new
                        {
                            Id = 3,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 8,
                            SkillName = "Sum range 26"
                        },
                        new
                        {
                            Id = 4,
                            BaseDescription = "",
                            BaseProfessionPoint = 4,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 8,
                            SkillName = "Sum range 27-28"
                        },
                        new
                        {
                            Id = 5,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 7,
                            SkillName = "Životy 1k6"
                        },
                        new
                        {
                            Id = 6,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 7,
                            SkillName = "Životy 1k6+1"
                        },
                        new
                        {
                            Id = 7,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 7,
                            SkillName = "Životy 1k6+2"
                        },
                        new
                        {
                            Id = 8,
                            BaseDescription = "",
                            BaseProfessionPoint = 4,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 0,
                            SkillClass = 7,
                            SkillName = "Životy 1k10"
                        },
                        new
                        {
                            Id = 9,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Léčba vlastních zranění II"
                        },
                        new
                        {
                            Id = 10,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Odhad soupeře"
                        },
                        new
                        {
                            Id = 11,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Odhad zbraně"
                        },
                        new
                        {
                            Id = 12,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Poznání artefaktu"
                        },
                        new
                        {
                            Id = 13,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Přesnost"
                        },
                        new
                        {
                            Id = 14,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Sehranost"
                        },
                        new
                        {
                            Id = 15,
                            BaseDescription = "",
                            BaseProfessionPoint = 4,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Vícenásobné útoky"
                        },
                        new
                        {
                            Id = 16,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 1,
                            SkillClass = 0,
                            SkillName = "Zastrašení"
                        },
                        new
                        {
                            Id = 17,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 2,
                            SkillName = "Boj se zvýřaty"
                        },
                        new
                        {
                            Id = 18,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 2,
                            SkillName = "Stopování"
                        },
                        new
                        {
                            Id = 19,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 1,
                            SkillName = "Hraničářská mana"
                        },
                        new
                        {
                            Id = 20,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 12,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 1,
                            SkillName = "Kouzla"
                        },
                        new
                        {
                            Id = 21,
                            BaseDescription = "",
                            BaseProfessionPoint = 4,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 1,
                            SkillName = "Mymosmysloví schopnosti"
                        },
                        new
                        {
                            Id = 22,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 12,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 1,
                            SkillName = "Zmámení"
                        },
                        new
                        {
                            Id = 23,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 8,
                            SkillClass = 2,
                            SkillName = "Pes"
                        },
                        new
                        {
                            Id = 24,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Odolnost proti jedům"
                        },
                        new
                        {
                            Id = 25,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Lučba a magenergie"
                        },
                        new
                        {
                            Id = 26,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Lektvary"
                        },
                        new
                        {
                            Id = 27,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Svitky"
                        },
                        new
                        {
                            Id = 28,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Ostatní"
                        },
                        new
                        {
                            Id = 29,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Zbraně"
                        },
                        new
                        {
                            Id = 30,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Prsteny"
                        },
                        new
                        {
                            Id = 31,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Jedy"
                        },
                        new
                        {
                            Id = 32,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 17,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 11,
                            SkillClass = 3,
                            SkillName = "Výbušniny"
                        },
                        new
                        {
                            Id = 33,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Kouzelnický přítel"
                        },
                        new
                        {
                            Id = 34,
                            BaseDescription = "",
                            BaseProfessionPoint = 4,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Kouzelnická magenergie"
                        },
                        new
                        {
                            Id = 35,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Časoprostorová magie"
                        },
                        new
                        {
                            Id = 36,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Energetická útočná magie"
                        },
                        new
                        {
                            Id = 37,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Energetická obranná magie"
                        },
                        new
                        {
                            Id = 38,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Materiální magie"
                        },
                        new
                        {
                            Id = 39,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Vitální magie"
                        },
                        new
                        {
                            Id = 40,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Psychická magie"
                        },
                        new
                        {
                            Id = 41,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Poznávací magie"
                        },
                        new
                        {
                            Id = 42,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 26,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 5,
                            SkillClass = 1,
                            SkillName = "Iluzivní magie"
                        },
                        new
                        {
                            Id = 43,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Převleky"
                        },
                        new
                        {
                            Id = 44,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Zisk důvěry"
                        },
                        new
                        {
                            Id = 45,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Objevení mechanismu"
                        },
                        new
                        {
                            Id = 46,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Objevení objektu"
                        },
                        new
                        {
                            Id = 47,
                            BaseDescription = "",
                            BaseProfessionPoint = 2,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Šplh po zdech"
                        },
                        new
                        {
                            Id = 48,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Skok z výšky"
                        },
                        new
                        {
                            Id = 49,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Tichý pohyb"
                        },
                        new
                        {
                            Id = 50,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Schování se ve stínu"
                        },
                        new
                        {
                            Id = 51,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Vybírání kapes"
                        },
                        new
                        {
                            Id = 52,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Otevření objetu"
                        },
                        new
                        {
                            Id = 53,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 6,
                            SkillName = "Zneškodnění mechanismu"
                        },
                        new
                        {
                            Id = 54,
                            BaseDescription = "",
                            BaseProfessionPoint = 3,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 14,
                            SkillClass = 0,
                            SkillName = "Probodnutí ze zálohy"
                        },
                        new
                        {
                            Id = 55,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 0,
                            SkillName = "Léčba vlastních zranění I"
                        },
                        new
                        {
                            Id = 56,
                            BaseDescription = "",
                            BaseProfessionPoint = 4,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 0,
                            SkillName = "Vícenásobné útoky ve střelbě"
                        },
                        new
                        {
                            Id = 57,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 0,
                            SkillName = "Zrak"
                        },
                        new
                        {
                            Id = 58,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 0,
                            SkillName = "Odhad střelných zbraní"
                        },
                        new
                        {
                            Id = 59,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 0,
                            SkillName = "Odhad soupeře"
                        },
                        new
                        {
                            Id = 60,
                            BaseDescription = "",
                            BaseProfessionPoint = 5,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 5,
                            SkillName = "Výroba šípů"
                        },
                        new
                        {
                            Id = 61,
                            BaseDescription = "",
                            BaseProfessionPoint = 1,
                            CreatetByUserName = "Admin",
                            DependencySkillId = 0,
                            DependencySkillName = "",
                            KnowledgeGroup = 0,
                            ProfessionClass = 18,
                            SkillClass = 0,
                            SkillName = "Krok a střelba"
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgilityStatId")
                        .HasColumnType("int");

                    b.Property<int>("BodyHeightMax")
                        .HasColumnType("int");

                    b.Property<int>("BodyHeightMin")
                        .HasColumnType("int");

                    b.Property<int?>("CharismaStatId")
                        .HasColumnType("int");

                    b.Property<int?>("ConstitutionStatId")
                        .HasColumnType("int");

                    b.Property<int?>("IntelligenceStatId")
                        .HasColumnType("int");

                    b.Property<int>("Mobility")
                        .HasColumnType("int");

                    b.Property<string>("RaceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceSize")
                        .HasColumnType("int");

                    b.Property<string>("SpecialAbilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialAbilitiesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StrengthStatId")
                        .HasColumnType("int");

                    b.Property<int>("WeightMax")
                        .HasColumnType("int");

                    b.Property<int>("WeightMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgilityStatId");

                    b.HasIndex("CharismaStatId");

                    b.HasIndex("ConstitutionStatId");

                    b.HasIndex("IntelligenceStatId");

                    b.HasIndex("StrengthStatId");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgilityStatId = 2,
                            BodyHeightMax = 120,
                            BodyHeightMin = 70,
                            CharismaStatId = 5,
                            ConstitutionStatId = 3,
                            IntelligenceStatId = 4,
                            Mobility = 10,
                            RaceDescription = "Hobiti jsou malým, veselým nárůdkem. Jsou ještě menší než trpaslíci, chlupatí a jaksi \"dobrácky kulaťoučcí\". Žijí zpravidla v úrodných údolích, kde si ve stráních budují komfortní nory a doupata. Rozhodně nejsou nijak zvlášť silní, ale zato jsou velmi obratní a povětšinou inteligentní. Dobrodružství příliš nevyhledávají, protože mají rádi pohodlí, dobré jídlo a silné piti. Jestliže se však jednou přece jen vydají na cesty, patří k těm nejlepším zlodějům, jaké si jen dovedeš představit. Hobiti mají také zvláštní psychickou schopnost, díky které dokážou \"vycítit\" na dálku většinu živých tvorů. Této zvláštní vlastnosti říkají mezi sebou \"čich\", a přestože jejich pohodlnickým životem již dosti zakrněla, dokážou díky ní lokalizovat živou bytost, dokonce i když je od nich oddělena například železnou stěnou. Přestože hobiti nejsou zbabělí, jen neradi přistupují na boj tváří v tvář a raději používají své kuše než těžké meče nebo halapartny.",
                            RaceName = "Hobbit",
                            RaceSize = 0,
                            SpecialAbilities = "Čich",
                            SpecialAbilitiesDescription = "Tato schopnost mu umožňuje vycítit přítomnost většiny živých tvorů což zdaleka neznamená všechny tvory, například na kostlivce je hobitův čich krátký), není ale schopen vycítit různé plísně, houby a jiné rostliny ani běžné tvory velikosti A0 (respektive byl by schopen je cítit, ale nevnímá je, asi jako člověk obvykle nevnímá mravence v trávě, ačkoliv je schopen je vidět). Největší vzdálenost, na jakou to je schopen dokázat, je 12 sáhů. Tato vzdálenost se zkracuje o 1 sáh za každých 30 coulů dřeva, 10 coulů kamene nebo 1 coul kovu. Hobit není schopen určit, o jakého tvora se jedná, ani jak je přesně daleko, ale pozná, do jaké třídy velikosti patří. Hobit má neurčitý pocit cizí přítomnosti. Hobit nemůže svou zvláštní schopnost používat, pokud spí. V bdělém stavu se na ni nemusí soustředit, ale nebude-li svému okolí věnovat dostatečnou pozornost, může mu něco uniknout. Hobita při používání čichu neruší přítomnost ostatních členů družiny.",
                            StrengthStatId = 1,
                            WeightMax = 60,
                            WeightMin = 40
                        },
                        new
                        {
                            Id = 2,
                            AgilityStatId = 7,
                            BodyHeightMax = 130,
                            BodyHeightMin = 90,
                            CharismaStatId = 10,
                            ConstitutionStatId = 8,
                            IntelligenceStatId = 9,
                            Mobility = 9,
                            RaceDescription = "Gnómové jsou zvláštní rasou, o které se ví téměř jistě, že vznikla kdysi v dávných dobách splynutím části plemene trpaslíků s hobity. Podobně jako hobiti také gnómové jsou velmi obratní a poměrně chytří. Po trpaslících zase zdědili jejich nezdolnost a z části také lásku ke zlatu a drahým kamenům. Žijí v horách i v nížinách, ale nemilují podzemí, a proto si staví drobné kamenné domy, většinou daleko od velkých měst a obchodních cest. Přestože jen málokterý z nich se stane dobrým bojovníkem, dokážou v boji velmi dobře zacházet jak se sekerou, tak i s kuší. Mnoho z nich také nachází potěšení v různém bylinkářství a alchymii, ale stejně tak dobře se mohou uplatnit třeba jako zloději.",
                            RaceName = "Gnom",
                            RaceSize = 0,
                            SpecialAbilities = "",
                            SpecialAbilitiesDescription = "",
                            StrengthStatId = 6,
                            WeightMax = 75,
                            WeightMin = 50
                        },
                        new
                        {
                            Id = 3,
                            AgilityStatId = 12,
                            BodyHeightMax = 140,
                            BodyHeightMin = 110,
                            CharismaStatId = 15,
                            ConstitutionStatId = 13,
                            IntelligenceStatId = 14,
                            Mobility = 8,
                            RaceDescription = "Trpaslíci jsou jednou z nejznámějších člověku podobných ras. Jsou menší, podsadití, zocelení dlouhými věky strávenými v nehostinných pustinách. Jejich větrem ošlehané tváře snad vždy zdobí hnědé až černé vousy, které jim však, stejně jako vlasy, poměrně záhy šedivějí. Sídlí v horách, zpravidla daleko od civilizace. Díky infravidění vidí v omezené míře i ve tmě, a proto mohou pod zemí budovat rozsáhlé skalní komplexy šachet, jeskyní a sálů, kde těží drahé kameny, stříbro a především svoje milované zlato. Trpaslíci většinou postrádají jakýkoliv smysl pro humor, jsou vždy vážní a někdy až příliš sebejistí. Dané slovo dodrží, zejména kyne-li jim z toho nějaká výhoda. Jejich nejoblíbenější zbraní je válečná sekera. V boji jsou nesmírně stateční a jen neradi ustupují z prohrané bitvy. Brání-li trpaslík svoji hroudu zlata, neustoupí ani před rozvztekleným, vyhladovělým ohnivým drakem.",
                            RaceName = "Trpaslík",
                            RaceSize = 0,
                            SpecialAbilities = "Infravidění",
                            SpecialAbilitiesDescription = "Infravidění má dosah 20 sáhů a neproniká žádným materiálem, kterým by neproniklo obyčejné světlo. Ve slunečním světle (nebo ve světle stejné intenzity vyvolaném kouzlem) je infravidění nepoužitelné. Infravidění rovněž není použitelné za mlhy (a to ani ve tmě), podobně jako normální zrak. Pod vodou je infravidění použitelné, ale nikoli skrz vodní hladinu, která infrazáření podobně jako světlo a zvuk láme a všelijak zkresluje. Infravidění je schopnost vidět teplo. I v naprosté tmě trpaslík zřetelně uvidí každého živého tvora s teplou krví - skřeta i zatoulaného psa- jako jasně červenou skvrnu. Hady, červy a jiné studenokrevné živočichy trpaslík neuvidí, pokud se nebude dívat velmi pozorně. Infraviděním rovněž nelze zpozorovat některé nestvůry magické podstaty, jež nevydávají teplo (například kostlivce). lnfraviděním zpravidla nelze určovat ani tvar místností, ani jejich obsah. Výjimkou mohou být věci, které jsou studenější nebo teplejší než okolí. Například jezírko studené vody trpaslík uvidí jako tmavě modrou skvrnu, nedávno vyhaslé ohniště jako tmavě červenou. Trpaslík se nemusí na infravidění soustřeďovat. V situaci, kdy mu nebude stačit obyčejný zrak, začne automaticky infravidění využívat. I když tobě se takové zobrazení může zdát nejasné a nepochopitelné, trpaslík, který ho má jako vrozenou schopnost, se v něm poměrně dobře vyzná. Přechod od normálního vidění k infra vidění lze přirovnat k překrývání fotografií. Jakmile v šeru trpaslík přestává vidět skutečné barvy, začíná vnímat infrabarvy.",
                            StrengthStatId = 11,
                            WeightMax = 100,
                            WeightMin = 55
                        },
                        new
                        {
                            Id = 4,
                            AgilityStatId = 17,
                            BodyHeightMax = 180,
                            BodyHeightMin = 145,
                            CharismaStatId = 20,
                            ConstitutionStatId = 18,
                            IntelligenceStatId = 19,
                            Mobility = 12,
                            RaceDescription = "Elfové jsou známou rasou, žijící zpravidla hluboko v lesích nebo odlehlých údolích a roklinách. Jsou menší než lidé a zdaleka ne tak robustní. Pro své většinou plavé vlasy a jemné rysy obličeje jsou pokládáni za velmi krásné až poněkud změkčilé. Protože jsou velmi inteligentní, jen neradi bojují avšak jsou-li k boji donuceni, mohou být nebezpečnými soupeři. Díky své obratnosti dovedou dobře zacházet zejména s lukem a se střelnými zbraněmi vůbec. Největší potěšeni jim však činí studium a učení se kouzlům, a proto z jejich řad vzešlo již mnoho známých kouzelníků. Také milují krásné věci, ale od trpaslíků (které mimochodem nemají příliš v lásce) se liší především tím, že krásu hned nepřepočítávají na zlaťáky. Elfové jsou vesměs velmi čestní a spravedliví a nikdy se mezi nimi nevyskytují jedinci, pro které by zlo bylo přirozenou podstatou jejich osobnosti.",
                            RaceName = "Elf",
                            RaceSize = 1,
                            SpecialAbilities = "Dlouhověkost",
                            SpecialAbilitiesDescription = "",
                            StrengthStatId = 16,
                            WeightMax = 85,
                            WeightMin = 50
                        },
                        new
                        {
                            Id = 5,
                            AgilityStatId = 22,
                            BodyHeightMax = 210,
                            BodyHeightMin = 165,
                            CharismaStatId = 25,
                            ConstitutionStatId = 23,
                            IntelligenceStatId = 24,
                            Mobility = 11,
                            RaceDescription = "Lidé jsou snad nejrozšířenější rasou, žijící jak v oblastech hor, tak i ve stepích, lesích a tundrách. Budují rozsáhlá sídla, ať už města či vesnice, která zpravidla leží na velkých obchodních křižovatkách. Lidé jsou velmi houževnatí, nacházejí uplatnění v celé škále povoláni. Většina z nich se zabývá především zemědělstvím a řemeslnou výrobou, ale najdete mezi nimi i zdatné lovce a zkušené dobrodruhy všeho druhu.",
                            RaceName = "Člověk",
                            RaceSize = 1,
                            SpecialAbilities = "",
                            SpecialAbilitiesDescription = "",
                            StrengthStatId = 21,
                            WeightMax = 115,
                            WeightMin = 65
                        },
                        new
                        {
                            Id = 6,
                            AgilityStatId = 27,
                            BodyHeightMax = 220,
                            BodyHeightMin = 175,
                            CharismaStatId = 30,
                            ConstitutionStatId = 28,
                            IntelligenceStatId = 29,
                            Mobility = 12,
                            RaceDescription = "Barbaři jsou v podstatě lidé, ale jejich po staletí trvající odloučení od skutečné lidské civilizace způsobilo, že barbar zpravidla není tak inteligentní jako člověk, avšak je silnější a mnohem odolnější. Tyto vlastnosti jej také předurčují k tomu, aby se stal dobrým válečníkem.",
                            RaceName = "Barbar",
                            RaceSize = 1,
                            SpecialAbilities = "",
                            SpecialAbilitiesDescription = "",
                            StrengthStatId = 26,
                            WeightMax = 140,
                            WeightMin = 75
                        },
                        new
                        {
                            Id = 7,
                            AgilityStatId = 32,
                            BodyHeightMax = 245,
                            BodyHeightMin = 180,
                            CharismaStatId = 35,
                            ConstitutionStatId = 33,
                            IntelligenceStatId = 34,
                            Mobility = 11,
                            RaceDescription = "Krollové sídlí v horách, tundrách a vůbec v prostředí velmi tvrdém a nehostinném. Dospělý kroll může měřit hodně přes dva metry a zjevem může vzdáleně (velmi vzdáleně) připomínat pračlověka, i když jeho kůže je spíše zrohovatělá než chlupatá. Bezpečně je však poznáte podle jejich nezaměnitelných uší, jimž vděčí za svůj neobvyklý sluch. Krollové jsou silnější než obyčejní lidé, ale také poněkud neohrabaní a zejména o poznání hloupější. Žijí obvykle v nevelkých kmenech, které mezi sebou neustále válčí. V těchto bojích se velmi zdokonalili, a proto nyní patří k nejobávanějším bojovníkům a z jejich kyjů a palcátů jde vskutku příslovečný strach. Po svých divokých předcích kromě jiného podědili také vrozený \"ultrasluch\", který jim umožňuje do jisté míry \"vidět\" (podobně jako netopýrům) i za úplné tmy nebo mlhy. Pokud jde o jejich původ, je možné, že vznikli kdysi dávno spojením skřeta s poloobrem. To by také vysvětlovalo, proč se mezi nimi téměř nikdy nevyskytují jedinci preferující výhradně dobro.",
                            RaceName = "Kroll",
                            RaceSize = 2,
                            SpecialAbilities = "Ultrasluch",
                            SpecialAbilitiesDescription = "Jeho zvláštní schopnost se nazývá ultrasluch a připomíná sonar netopýrů. Kroll je schopen vysílat Lidským uchem nezachytitelné zvukové vlnění, které se odráží od zkoumaného předmětu a vrací se zpět ke krollovi. Podle toho, jak odražené vlnění vypadá, je kroll schopen určit vzdálenost a tvar předmětu. Ultrasluch je použitelný v mlze, dokonce i pod vodou (ale ne skrz vodní hladinu, na ní se zvuk láme, odráží a všelijak zkresluje). Krollův ultrasluch má dosah 50 sáhů. To znamená, že kroll je schopen postřehnout jakýkoliv předmět nebo jakéhokoliv hmotného tvora, který je blíž než 50 sáhů a není zastíněn nějakým jiným předmětem nebo tvorem. Bude také schopen zhruba určit jeho vzdálenost a velikost. Kroll nepozná, o jakého tvora jde, ale pozná například, kolik má nohou apod. S předměty v jeskyni a jejím vybavením to je podobné. Krollův ultrasluch je v podstatě stále ještě sluchem, a proto závisí na hluku, který krolla obklopuje. Kroll nemůže používat ultrasluch v prostředí, které je hlučnější než obyčejný lidský hovor. Kroll svůj ultrasluch nepoužívá automaticky. Chce-li tuto svou zvláštní schopnost použít, musí o tom říct Pánovi jeskyně. Prozkoumávání ultrasluchem je stejně rychlé jako pohled. Prostor, který by kroll očima přehlédl během jednoho kola, je schopen za stejnou dobu prozkoumat i ultrasluchem. Kroll je schopen díky svému ultrasluchu vnímat i netopýry (a delfíny a jiné tvory, vybavené sonarem), není ovšem schopen se s nimi nijak dorozumět ani s nimi komunikovat. Tyto cizí signály krollův ultrasluch neruší, není-li jich příliš mnoho. Například uprostřed hejna netopýrů kroll svoji zvláštní schopnost může použít jen stěží.",
                            StrengthStatId = 31,
                            WeightMax = 200,
                            WeightMin = 100
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.SkillsModels.BaseSpecificSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InternalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("LevelGroup")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionClass")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionSkillId")
                        .HasColumnType("int");

                    b.Property<string>("ProfessionSkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillSumPrice")
                        .HasColumnType("int");

                    b.Property<string>("Skill_type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("SpecificDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionSkillId");

                    b.ToTable("SpecificSkill");

                    b.HasDiscriminator<string>("Skill_type").HasValue("BaseSpecificSkill");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbnailImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patchname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScaleImage")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<string>("class")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("ThumbnailImages");

                    b.HasDiscriminator<string>("class").HasValue("ThumbnailImage");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountOfMagicInTheWorld")
                        .HasColumnType("int");

                    b.Property<Guid?>("GameMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorldDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameMasterId");

                    b.ToTable("Worlds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOfMagicInTheWorld = 100,
                            WorldDescription = "Svět plný magie a kouzel, kde se můžete setkat s draky, elfy, trpaslíky a dalšími bytostmi.",
                            WorldName = "Fantasy svět"
                        },
                        new
                        {
                            Id = 2,
                            AmountOfMagicInTheWorld = 25,
                            WorldDescription = "Svět, který prošel apokalypsou a kde se lidstvo snaží přežít v nepřátelském prostředí.",
                            WorldName = "Postapo"
                        },
                        new
                        {
                            Id = 3,
                            AmountOfMagicInTheWorld = 0,
                            WorldDescription = "Svět, který známe, kde neexistuje magie a kouzla.",
                            WorldName = "Reálný svět"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NarrativeProfessionModul", b =>
                {
                    b.Property<int>("NarrativesId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionModulesId")
                        .HasColumnType("int");

                    b.HasKey("NarrativesId", "ProfessionModulesId");

                    b.HasIndex("ProfessionModulesId");

                    b.ToTable("NarrativeProfessionModul");
                });

            modelBuilder.Entity("ProfessionModulProfessionSkill", b =>
                {
                    b.Property<int>("BeginnerSkillsId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionModulId")
                        .HasColumnType("int");

                    b.HasKey("BeginnerSkillsId", "ProfessionModulId");

                    b.HasIndex("ProfessionModulId");

                    b.ToTable("BindTable_Beginner_ProfessionSkill", (string)null);
                });

            modelBuilder.Entity("ProfessionModulProfessionSkill1", b =>
                {
                    b.Property<int>("AdvancedSkillsId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionModul1Id")
                        .HasColumnType("int");

                    b.HasKey("AdvancedSkillsId", "ProfessionModul1Id");

                    b.HasIndex("ProfessionModul1Id");

                    b.ToTable("BindTable_Advanced_ProfessionSkill", (string)null);
                });

            modelBuilder.Entity("ProfessionModulProfessionSkill2", b =>
                {
                    b.Property<int>("ExpertSkillsId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionModul2Id")
                        .HasColumnType("int");

                    b.HasKey("ExpertSkillsId", "ProfessionModul2Id");

                    b.HasIndex("ProfessionModul2Id");

                    b.ToTable("BindTable_Expert_ProfessionSkill", (string)null);
                });

            modelBuilder.Entity("RaceWorld", b =>
                {
                    b.Property<int>("RacesId")
                        .HasColumnType("int");

                    b.Property<int>("WorldsId")
                        .HasColumnType("int");

                    b.HasKey("RacesId", "WorldsId");

                    b.HasIndex("WorldsId");

                    b.ToTable("RaceWorld");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.GeneralAttributes.CharacterStat", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.GeneralAttributes.GeneralAttribut");

                    b.Property<int>("AtributValue")
                        .HasColumnType("int");

                    b.Property<int>("AttributePoints")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<int>("DiceRoll")
                        .HasColumnType("int");

                    b.Property<int>("PrimarAtribut")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("character");

                    b.HasData(
                        new
                        {
                            Id = 36,
                            Atribut = 0,
                            Name = "Pokusňák",
                            NumberOfDice = 1,
                            RangeHigh = 8,
                            RangeLow = 3,
                            AtributValue = 6,
                            AttributePoints = 30,
                            Author = "",
                            Bonus = -2,
                            DiceRoll = 4,
                            PrimarAtribut = 0
                        },
                        new
                        {
                            Id = 37,
                            Atribut = 1,
                            Name = "Pokusňák",
                            NumberOfDice = 1,
                            RangeHigh = 16,
                            RangeLow = 11,
                            AtributValue = 13,
                            AttributePoints = 55,
                            Author = "",
                            Bonus = 1,
                            DiceRoll = 4,
                            PrimarAtribut = 0
                        },
                        new
                        {
                            Id = 38,
                            Atribut = 2,
                            Name = "Pokusňák",
                            NumberOfDice = 1,
                            RangeHigh = 13,
                            RangeLow = 8,
                            AtributValue = 11,
                            AttributePoints = 40,
                            Author = "",
                            Bonus = 0,
                            DiceRoll = 4,
                            PrimarAtribut = 0
                        },
                        new
                        {
                            Id = 39,
                            Atribut = 3,
                            Name = "Pokusňák",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            AtributValue = 13,
                            AttributePoints = 50,
                            Author = "",
                            Bonus = 1,
                            DiceRoll = 4,
                            PrimarAtribut = 0
                        },
                        new
                        {
                            Id = 40,
                            Atribut = 4,
                            Name = "Pokusňák",
                            NumberOfDice = 2,
                            RangeHigh = 18,
                            RangeLow = 8,
                            AtributValue = 14,
                            AttributePoints = 40,
                            Author = "",
                            Bonus = 1,
                            DiceRoll = 8,
                            PrimarAtribut = 0
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.GeneralAttributes.RaceStat", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.GeneralAttributes.GeneralAttribut");

                    b.Property<int>("Correction")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("race");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Atribut = 0,
                            Name = "Hobbit",
                            NumberOfDice = 1,
                            RangeHigh = 8,
                            RangeLow = 3,
                            Correction = -5
                        },
                        new
                        {
                            Id = 2,
                            Atribut = 1,
                            Name = "Hobbit",
                            NumberOfDice = 1,
                            RangeHigh = 16,
                            RangeLow = 11,
                            Correction = 2
                        },
                        new
                        {
                            Id = 3,
                            Atribut = 2,
                            Name = "Hobbit",
                            NumberOfDice = 1,
                            RangeHigh = 13,
                            RangeLow = 8,
                            Correction = 0
                        },
                        new
                        {
                            Id = 4,
                            Atribut = 3,
                            Name = "Hobbit",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            Correction = -2
                        },
                        new
                        {
                            Id = 5,
                            Atribut = 4,
                            Name = "Hobbit",
                            NumberOfDice = 2,
                            RangeHigh = 18,
                            RangeLow = 8,
                            Correction = 3
                        },
                        new
                        {
                            Id = 6,
                            Atribut = 0,
                            Name = "Gnom",
                            NumberOfDice = 1,
                            RangeHigh = 10,
                            RangeLow = 5,
                            Correction = -3
                        },
                        new
                        {
                            Id = 7,
                            Atribut = 1,
                            Name = "Gnom",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            Correction = 1
                        },
                        new
                        {
                            Id = 8,
                            Atribut = 2,
                            Name = "Gnom",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            Correction = 1
                        },
                        new
                        {
                            Id = 9,
                            Atribut = 3,
                            Name = "Gnom",
                            NumberOfDice = 1,
                            RangeHigh = 14,
                            RangeLow = 9,
                            Correction = -2
                        },
                        new
                        {
                            Id = 10,
                            Atribut = 4,
                            Name = "Gnom",
                            NumberOfDice = 1,
                            RangeHigh = 12,
                            RangeLow = 7,
                            Correction = 0
                        },
                        new
                        {
                            Id = 11,
                            Atribut = 0,
                            Name = "Dwarf",
                            NumberOfDice = 1,
                            RangeHigh = 12,
                            RangeLow = 7,
                            Correction = 1
                        },
                        new
                        {
                            Id = 12,
                            Atribut = 1,
                            Name = "Dwarf",
                            NumberOfDice = 1,
                            RangeHigh = 12,
                            RangeLow = 7,
                            Correction = -2
                        },
                        new
                        {
                            Id = 13,
                            Atribut = 2,
                            Name = "Dwarf",
                            NumberOfDice = 1,
                            RangeHigh = 17,
                            RangeLow = 12,
                            Correction = 3
                        },
                        new
                        {
                            Id = 14,
                            Atribut = 3,
                            Name = "Dwarf",
                            NumberOfDice = 1,
                            RangeHigh = 13,
                            RangeLow = 8,
                            Correction = -3
                        },
                        new
                        {
                            Id = 15,
                            Atribut = 4,
                            Name = "Dwarf",
                            NumberOfDice = 1,
                            RangeHigh = 12,
                            RangeLow = 7,
                            Correction = -2
                        },
                        new
                        {
                            Id = 16,
                            Atribut = 0,
                            Name = "Human",
                            NumberOfDice = 1,
                            RangeHigh = 11,
                            RangeLow = 6,
                            Correction = 0
                        },
                        new
                        {
                            Id = 17,
                            Atribut = 1,
                            Name = "Human",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            Correction = 1
                        },
                        new
                        {
                            Id = 18,
                            Atribut = 2,
                            Name = "Human",
                            NumberOfDice = 1,
                            RangeHigh = 11,
                            RangeLow = 6,
                            Correction = -4
                        },
                        new
                        {
                            Id = 19,
                            Atribut = 3,
                            Name = "Human",
                            NumberOfDice = 1,
                            RangeHigh = 17,
                            RangeLow = 12,
                            Correction = 2
                        },
                        new
                        {
                            Id = 20,
                            Atribut = 4,
                            Name = "Human",
                            NumberOfDice = 2,
                            RangeHigh = 18,
                            RangeLow = 8,
                            Correction = 2
                        },
                        new
                        {
                            Id = 21,
                            Atribut = 0,
                            Name = "Elf",
                            NumberOfDice = 2,
                            RangeHigh = 16,
                            RangeLow = 6,
                            Correction = 0
                        },
                        new
                        {
                            Id = 22,
                            Atribut = 1,
                            Name = "Elf",
                            NumberOfDice = 1,
                            RangeHigh = 14,
                            RangeLow = 9,
                            Correction = 0
                        },
                        new
                        {
                            Id = 23,
                            Atribut = 2,
                            Name = "Elf",
                            NumberOfDice = 1,
                            RangeHigh = 14,
                            RangeLow = 9,
                            Correction = 0
                        },
                        new
                        {
                            Id = 24,
                            Atribut = 3,
                            Name = "Elf",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            Correction = 0
                        },
                        new
                        {
                            Id = 25,
                            Atribut = 4,
                            Name = "Elf",
                            NumberOfDice = 3,
                            RangeHigh = 17,
                            RangeLow = 2,
                            Correction = 0
                        },
                        new
                        {
                            Id = 26,
                            Atribut = 0,
                            Name = "Barbar",
                            NumberOfDice = 1,
                            RangeHigh = 15,
                            RangeLow = 10,
                            Correction = 1
                        },
                        new
                        {
                            Id = 27,
                            Atribut = 1,
                            Name = "Barbar",
                            NumberOfDice = 1,
                            RangeHigh = 13,
                            RangeLow = 8,
                            Correction = -1
                        },
                        new
                        {
                            Id = 28,
                            Atribut = 2,
                            Name = "Barbar",
                            NumberOfDice = 1,
                            RangeHigh = 16,
                            RangeLow = 11,
                            Correction = 1
                        },
                        new
                        {
                            Id = 29,
                            Atribut = 3,
                            Name = "Barbar",
                            NumberOfDice = 1,
                            RangeHigh = 11,
                            RangeLow = 6,
                            Correction = 0
                        },
                        new
                        {
                            Id = 30,
                            Atribut = 4,
                            Name = "Barbar",
                            NumberOfDice = 3,
                            RangeHigh = 16,
                            RangeLow = 1,
                            Correction = -2
                        },
                        new
                        {
                            Id = 31,
                            Atribut = 0,
                            Name = "Kroll",
                            NumberOfDice = 1,
                            RangeHigh = 16,
                            RangeLow = 11,
                            Correction = 3
                        },
                        new
                        {
                            Id = 32,
                            Atribut = 1,
                            Name = "Kroll",
                            NumberOfDice = 1,
                            RangeHigh = 10,
                            RangeLow = 5,
                            Correction = -4
                        },
                        new
                        {
                            Id = 33,
                            Atribut = 2,
                            Name = "Kroll",
                            NumberOfDice = 1,
                            RangeHigh = 18,
                            RangeLow = 13,
                            Correction = 3
                        },
                        new
                        {
                            Id = 34,
                            Atribut = 3,
                            Name = "Kroll",
                            NumberOfDice = 1,
                            RangeHigh = 7,
                            RangeLow = 2,
                            Correction = -6
                        },
                        new
                        {
                            Id = 35,
                            Atribut = 4,
                            Name = "Kroll",
                            NumberOfDice = 2,
                            RangeHigh = 11,
                            RangeLow = 1,
                            Correction = -5
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.SkillsModels.Healing", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.SkillsModels.BaseSpecificSkill");

                    b.Property<int>("MaxHealingPoints")
                        .HasColumnType("int");

                    b.Property<int>("SpeedOfHealing")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("healing");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InternalName = "Healing",
                            Level = 2,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 2 Hp za 1 směnu, maximálně 2 Hp za den.",
                            MaxHealingPoints = 2,
                            SpeedOfHealing = 2
                        },
                        new
                        {
                            Id = 2,
                            InternalName = "Healing",
                            Level = 3,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 4 Hp za den.",
                            MaxHealingPoints = 4,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 3,
                            InternalName = "Healing",
                            Level = 4,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 6 Hp za den.",
                            MaxHealingPoints = 6,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 4,
                            InternalName = "Healing",
                            Level = 5,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 8 Hp za den.",
                            MaxHealingPoints = 8,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 5,
                            InternalName = "Healing",
                            Level = 6,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 10 Hp za den.",
                            MaxHealingPoints = 10,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 6,
                            InternalName = "Healing",
                            Level = 7,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 12 Hp za den.",
                            MaxHealingPoints = 12,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 7,
                            InternalName = "Healing",
                            Level = 8,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 14 Hp za den.",
                            MaxHealingPoints = 14,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 8,
                            InternalName = "Healing",
                            Level = 9,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 16 Hp za den.",
                            MaxHealingPoints = 16,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 9,
                            InternalName = "Healing",
                            Level = 15,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 4 Hp za 1 směnu, maximálně 16 Hp za den.",
                            MaxHealingPoints = 16,
                            SpeedOfHealing = 4
                        },
                        new
                        {
                            Id = 10,
                            InternalName = "Healing",
                            Level = 16,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 4 Hp za 1 směnu, maximálně 16 Hp za den.",
                            MaxHealingPoints = 16,
                            SpeedOfHealing = 4
                        },
                        new
                        {
                            Id = 11,
                            InternalName = "Healing",
                            Level = 25,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 5 Hp za 1 směnu, maximálně 16 Hp za den.",
                            MaxHealingPoints = 16,
                            SpeedOfHealing = 5
                        },
                        new
                        {
                            Id = 12,
                            InternalName = "Healing",
                            Level = 35,
                            LevelGroup = 3,
                            ProfessionClass = 1,
                            ProfessionSkillId = 1,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 6 Hp za 1 směnu, maximálně 16 Hp za den.",
                            MaxHealingPoints = 16,
                            SpeedOfHealing = 6
                        },
                        new
                        {
                            Id = 13,
                            InternalName = "Healing",
                            Level = 2,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 1 Hp za 1 směnu, maximálně 1 Hp za den.",
                            MaxHealingPoints = 1,
                            SpeedOfHealing = 1
                        },
                        new
                        {
                            Id = 14,
                            InternalName = "Healing",
                            Level = 3,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 2 Hp za 1 směnu, maximálně 2 Hp za den.",
                            MaxHealingPoints = 2,
                            SpeedOfHealing = 2
                        },
                        new
                        {
                            Id = 15,
                            InternalName = "Healing",
                            Level = 4,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 3 Hp za den.",
                            MaxHealingPoints = 3,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 16,
                            InternalName = "Healing",
                            Level = 5,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 4 Hp za den.",
                            MaxHealingPoints = 4,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 17,
                            InternalName = "Healing",
                            Level = 6,
                            LevelGroup = 1,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 5 Hp za den.",
                            MaxHealingPoints = 5,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 18,
                            InternalName = "Healing",
                            Level = 7,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 6 Hp za den.",
                            MaxHealingPoints = 6,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 19,
                            InternalName = "Healing",
                            Level = 8,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 7 Hp za den.",
                            MaxHealingPoints = 7,
                            SpeedOfHealing = 3
                        },
                        new
                        {
                            Id = 20,
                            InternalName = "Healing",
                            Level = 6,
                            LevelGroup = 3,
                            ProfessionClass = 18,
                            ProfessionSkillId = 16,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava si může vyléčit 3 Hp za 1 směnu, maximálně 8 Hp za den.",
                            MaxHealingPoints = 8,
                            SpeedOfHealing = 3
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.SkillsModels.MultipleAttack", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.SkillsModels.BaseSpecificSkill");

                    b.Property<int>("CategoryWeapon")
                        .HasColumnType("int");

                    b.Property<int>("Initiative")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("multiple_attack");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            InternalName = "MultipleAttack",
                            Level = 5,
                            LevelGroup = 0,
                            ProfessionClass = 1,
                            ProfessionSkillId = 7,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava může zaútočit 2x v prvním kole a v dalším kole 1x",
                            CategoryWeapon = 3,
                            Initiative = 3,
                            InitiativeText = "3/2"
                        },
                        new
                        {
                            Id = 22,
                            InternalName = "MultipleAttack",
                            Level = 10,
                            LevelGroup = 1,
                            ProfessionClass = 4,
                            ProfessionSkillId = 7,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava může zaútočit 2x v každém kole",
                            CategoryWeapon = 1,
                            Initiative = 6,
                            InitiativeText = "2/1"
                        },
                        new
                        {
                            Id = 23,
                            InternalName = "MultipleAttack",
                            Level = 15,
                            LevelGroup = 1,
                            ProfessionClass = 4,
                            ProfessionSkillId = 7,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava může zaútočit 2x v každém kole",
                            CategoryWeapon = 3,
                            Initiative = 6,
                            InitiativeText = "2/1"
                        },
                        new
                        {
                            Id = 24,
                            InternalName = "MultipleAttack",
                            Level = 16,
                            LevelGroup = 2,
                            ProfessionClass = 4,
                            ProfessionSkillId = 7,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava může zaútočit 5x v prvním kole a v dalším kole 2x",
                            CategoryWeapon = 1,
                            Initiative = 9,
                            InitiativeText = "5/2"
                        },
                        new
                        {
                            Id = 25,
                            InternalName = "MultipleAttack",
                            Level = 27,
                            LevelGroup = 2,
                            ProfessionClass = 4,
                            ProfessionSkillId = 7,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava může zaútočit 3x v každém kole",
                            CategoryWeapon = 1,
                            Initiative = 12,
                            InitiativeText = "3/1"
                        },
                        new
                        {
                            Id = 26,
                            InternalName = "MultipleAttack",
                            Level = 28,
                            LevelGroup = 2,
                            ProfessionClass = 4,
                            ProfessionSkillId = 7,
                            ProfessionSkillName = "",
                            SkillSumPrice = 20,
                            SpecificDescription = "Postava může zaútočit 5x v prvním kole a v dalším kole 2x",
                            CategoryWeapon = 3,
                            Initiative = 9,
                            InitiativeText = "5/2"
                        });
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgCharacter", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.ThumbModels.ThumbnailImage");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasIndex("CharacterId")
                        .IsUnique()
                        .HasFilter("[CharacterId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("ThumbCharacter");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgNarrative", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.ThumbModels.ThumbnailImage");

                    b.Property<int>("NarrativeId")
                        .HasColumnType("int");

                    b.HasIndex("NarrativeId")
                        .IsUnique()
                        .HasFilter("[NarrativeId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("ThumbNarrative");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgRace", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.ThumbModels.ThumbnailImage");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.HasIndex("RaceId")
                        .IsUnique()
                        .HasFilter("[RaceId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("ThumbRace");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgWorld", b =>
                {
                    b.HasBaseType("HoLWeb.DataLayer.Models.ThumbModels.ThumbnailImage");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.HasIndex("WorldId")
                        .IsUnique()
                        .HasFilter("[WorldId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("ThumbWorld");
                });

            modelBuilder.Entity("ApplicationUserWorld", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.World", null)
                        .WithMany()
                        .HasForeignKey("WorldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Character", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.CharacterStat", "NavForAgilityStat")
                        .WithMany()
                        .HasForeignKey("AgilityStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Agility_Character");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.CharacterStat", "NavForCharismaStat")
                        .WithMany()
                        .HasForeignKey("CharismaStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Charisma");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.CharacterStat", "NavForConstitutionStat")
                        .WithMany()
                        .HasForeignKey("ConstitutionStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Constitution_Character");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.CharacterStat", "NavForIntelligenceStat")
                        .WithMany()
                        .HasForeignKey("IntelligenceStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Intelligence_Character");

                    b.HasOne("HoLWeb.DataLayer.Models.Narrative", "Narrative")
                        .WithMany("Characters")
                        .HasForeignKey("NarrativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.CharacterStat", "NavForStrengthStat")
                        .WithMany()
                        .HasForeignKey("StrengthStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Strength_Character");

                    b.Navigation("Narrative");

                    b.Navigation("NavForAgilityStat");

                    b.Navigation("NavForCharismaStat");

                    b.Navigation("NavForConstitutionStat");

                    b.Navigation("NavForIntelligenceStat");

                    b.Navigation("NavForStrengthStat");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Narrative", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.World", "World")
                        .WithMany("Narratives")
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("World");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ProfessionSkill", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.Character", null)
                        .WithMany("IndividualProfessionSkills")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Race", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.RaceStat", "AgilityStat")
                        .WithMany()
                        .HasForeignKey("AgilityStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Agility_Race");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.RaceStat", "CharismaStat")
                        .WithMany()
                        .HasForeignKey("CharismaStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Charisma_Race");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.RaceStat", "ConstitutionStat")
                        .WithMany()
                        .HasForeignKey("ConstitutionStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Constitution_Race");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.RaceStat", "IntelligenceStat")
                        .WithMany()
                        .HasForeignKey("IntelligenceStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Intelligence_Race");

                    b.HasOne("HoLWeb.DataLayer.Models.GeneralAttributes.RaceStat", "StrengthStat")
                        .WithMany()
                        .HasForeignKey("StrengthStatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Strength_Race");

                    b.Navigation("AgilityStat");

                    b.Navigation("CharismaStat");

                    b.Navigation("ConstitutionStat");

                    b.Navigation("IntelligenceStat");

                    b.Navigation("StrengthStat");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.SkillsModels.BaseSpecificSkill", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionSkill", "ProfessionSkill")
                        .WithMany("BaseSpecificSkills")
                        .HasForeignKey("ProfessionSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionSkill");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.World", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", "GameMaster")
                        .WithMany()
                        .HasForeignKey("GameMasterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_GameMaster_World");

                    b.Navigation("GameMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.IdentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NarrativeProfessionModul", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.Narrative", null)
                        .WithMany()
                        .HasForeignKey("NarrativesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionModul", null)
                        .WithMany()
                        .HasForeignKey("ProfessionModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfessionModulProfessionSkill", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionSkill", null)
                        .WithMany()
                        .HasForeignKey("BeginnerSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionModul", null)
                        .WithMany()
                        .HasForeignKey("ProfessionModulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfessionModulProfessionSkill1", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionSkill", null)
                        .WithMany()
                        .HasForeignKey("AdvancedSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionModul", null)
                        .WithMany()
                        .HasForeignKey("ProfessionModul1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfessionModulProfessionSkill2", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionSkill", null)
                        .WithMany()
                        .HasForeignKey("ExpertSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.ProfessionModul", null)
                        .WithMany()
                        .HasForeignKey("ProfessionModul2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RaceWorld", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.Race", null)
                        .WithMany()
                        .HasForeignKey("RacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoLWeb.DataLayer.Models.World", null)
                        .WithMany()
                        .HasForeignKey("WorldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgCharacter", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.Character", "Character")
                        .WithOne("ThumbnailImage")
                        .HasForeignKey("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgCharacter", "CharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Character");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgNarrative", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.Narrative", "Narrative")
                        .WithOne("ThumbnailImage")
                        .HasForeignKey("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgNarrative", "NarrativeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Narrative");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgRace", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.Race", "Race")
                        .WithOne("ThumbnailImage")
                        .HasForeignKey("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgRace", "RaceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Race");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgWorld", b =>
                {
                    b.HasOne("HoLWeb.DataLayer.Models.World", "World")
                        .WithOne("ThumbnailImage")
                        .HasForeignKey("HoLWeb.DataLayer.Models.ThumbModels.ThumbImgWorld", "WorldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("World");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Character", b =>
                {
                    b.Navigation("IndividualProfessionSkills");

                    b.Navigation("ThumbnailImage");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Narrative", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("ThumbnailImage");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.ProfessionSkill", b =>
                {
                    b.Navigation("BaseSpecificSkills");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.Race", b =>
                {
                    b.Navigation("ThumbnailImage");
                });

            modelBuilder.Entity("HoLWeb.DataLayer.Models.World", b =>
                {
                    b.Navigation("Narratives");

                    b.Navigation("ThumbnailImage");
                });
#pragma warning restore 612, 618
        }
    }
}
