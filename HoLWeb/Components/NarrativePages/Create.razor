@page "/narrative/create"
@rendermode InteractiveServer

@using HoLWeb.DataLayer.Models.IdentityModels
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@attribute [Authorize]

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Create</PageTitle>



<AuthorizeView Policy="AdminOnly">
    <Authorized Context="authorizedContext">
        <h1>Tvorba příběhu</h1>

        <h2>Nový příběh</h2>
        <hr />
        <div class="row">
            <div class="col-md-4">
                <EditForm method="post" Model="Narrative" OnValidSubmit="AddNarrative" FormName="create" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" role="alert" />
                    <div class="mb-3">
                        <label for="narrativename" class="form-label">NarrativeName:</label>
                        <InputText id="narrativename" @bind-Value="Narrative.NarrativeName" class="form-control" />
                        <ValidationMessage For="() => Narrative.NarrativeName" class="text-danger" />
                    </div>
                    <div class="mb-3">
                        <label for="narrativedescription" class="form-label">NarrativeDescription:</label>
                        <InputText id="narrativedescription" @bind-Value="Narrative.NarrativeDescription" class="form-control" />
                        <ValidationMessage For="() => Narrative.NarrativeDescription" class="text-danger" />
                    </div>
                    <div class="mb-3">
                        <label for="era" class="form-label">Era:</label>
                        <InputText id="era" @bind-Value="Narrative.Era" class="form-control" />
                        <ValidationMessage For="() => Narrative.Era" class="text-danger" />
                    </div>
                    <div class="mb-3">
                        <label for="year" class="form-label">Year:</label>
                        <InputNumber id="year" @bind-Value="Narrative.Year" class="form-control" />
                        <ValidationMessage For="() => Narrative.Year" class="text-danger" />
                    </div>
                    <div class="mb-3">
                        <label for="worldid" class="form-label">WorldId:</label>
                        <InputNumber id="worldid" @bind-Value="Narrative.WorldId" class="form-control" />
                        <ValidationMessage For="() => Narrative.WorldId" class="text-danger" />
                    </div>

                      <label for="gameMasterGuid" class="form-label">GameMasterGuid: @userId</label>

                    <button type="submit" class="btn btn-primary">Create</button>
                </EditForm>
            </div>
        </div>
        <div>
            <a href="/narrative">Back to List</a>
        </div>
    </Authorized>

    <NotAuthorized>
        <p>Nejsi přihlášen</p>
        <div>
            <a href="/narrative">Back to List</a>
        </div>
    </NotAuthorized>

</AuthorizeView>







@code {
    [SupplyParameterFromForm]
    private NarrativeDto Narrative { get; set; } = new();
    private string userId = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        if(user.Identity.IsAuthenticated)
        {
            var applicationUser = await UserManager.GetUserAsync(user);
            userId = applicationUser.Id.ToString();
        }
        
    }

    private async Task AddNarrative()
    {
        Narrative.GameMasterGuid = userId;
        await NarrativeManager.AddDataAsync(Narrative);
        NavigationManager.NavigateTo("/narratives");
    }
}
