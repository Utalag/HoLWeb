@page "/races/delete"
@using Microsoft.EntityFrameworkCore
@using HoLWeb.DataLayer.Models
@inject IDbContextFactory<HoLWeb.DataLayer.Database.HoLWebDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Race</h2>
    <hr />
    @if (race is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">RaceName</dt>
            <dd class="col-sm-10">@race.RaceName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RaceDescription</dt>
            <dd class="col-sm-10">@race.RaceDescription</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RaceSize</dt>
            <dd class="col-sm-10">@race.RaceSize</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Mobility</dt>
            <dd class="col-sm-10">@race.Mobility</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SpecialAbilities</dt>
            <dd class="col-sm-10">@race.SpecialAbilities</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SpecialAbilitiesDescription</dt>
            <dd class="col-sm-10">@race.SpecialAbilitiesDescription</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">WeightMin</dt>
            <dd class="col-sm-10">@race.WeightMin</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">WeightMax</dt>
            <dd class="col-sm-10">@race.WeightMax</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BodyHeightMin</dt>
            <dd class="col-sm-10">@race.BodyHeightMin</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BodyHeightMax</dt>
            <dd class="col-sm-10">@race.BodyHeightMax</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StrengthStatId</dt>
            <dd class="col-sm-10">@race.StrengthStatId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AgilityStatId</dt>
            <dd class="col-sm-10">@race.AgilityStatId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ConstitutionStatId</dt>
            <dd class="col-sm-10">@race.ConstitutionStatId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IntelligenceStatId</dt>
            <dd class="col-sm-10">@race.IntelligenceStatId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CharismaStatId</dt>
            <dd class="col-sm-10">@race.CharismaStatId</dd>
        </dl>
        <EditForm method="post" Model="race" OnValidSubmit="DeleteRace" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(race is null)">Delete</button> |
            <a href="/races">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Race? race;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        race = await context.Races.FirstOrDefaultAsync(m => m.Id == Id);

        if (race is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteRace()
    {
        using var context = DbFactory.CreateDbContext();
        context.Races.Remove(race!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/races");
    }
}
