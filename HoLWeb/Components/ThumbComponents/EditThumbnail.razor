@page "/EditThumbnail/{ThumbId:int}"


@using HoLWeb.BusinessLayer.Interfaces.IThumbImgManagers
@using HoLWeb.BusinessLayer.Models
@using SixLabors.ImageSharp

@inject IThumbImgWorldManager ThumbManager
@inject NavigationManager Navigation

@rendermode InteractiveServer

<PageTitle >"Editace náhledu"</PageTitle>




<div class="Imgcontainer" style="width:@(300 * scaleContainer)px; height:@(300 * scaleContainer)px;">
    <div class="inLine">
        <div class="scaleBorder">
            <input type="range" @bind=@scaleContainer min="1" max="3" step="1">
        </div>
        <div class="button">
            <label for="file">New</label>
        </div>
    </div>


    <div class="horizontalAlign">
        <div class="vSlider">
            <input type="range" @bind=@thumb.Y min="1" max="100" step="1" orient="vertical">
        </div>
        <div class="imgBorder" style="background-image: url('@urlImg'); background-position: @(thumb.X)% @(thumb.Y)%; background-size: @(thumb.ScaleImage)%;">
        </div>
        <div class="vSlider">
            <input type="range" @bind=@thumb.ScaleImage min="100" max="500" step="1" orient="vertical">
        </div>
    </div>


    <div class="inLine">
        <div class="button" @onclick="OnReset">
            Reset
        </div>
        <div class="hSlider">
            <input type="range" @bind=@thumb.X min="1" max="100" step="1">
        </div>
        <div class="button" @onclick="OnSave">
            Ulož
        </div>
    </div>
</div>


<InputFile OnChange="OnChangeImage" id="file" accept="image/*" hidden/>




@code {
    [Parameter] public int ThumbId { get; set; }
    private ThumbnailImageDto thumb = new ThumbnailImageDto();
    private int scaleContainer = 1;
    private string urlImg = string.Empty;
    private string altUrlImg = string.Empty;

    protected override void OnInitialized()
    {
        thumb = ThumbManager.GetDateById(ThumbId);
        if (thumb == null)
        {
            Navigation.NavigateTo("/worldpage");
        }
        urlImg = $"data:image/webp;base64,{Convert.ToBase64String(thumb.ImageData)}";
    }

    private async Task OnChangeImage(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file == null)
        {
            return;
        }
        Int64 originalSize = file.Size;



        using (var stream = file.OpenReadStream(maxAllowedSize: originalSize))
        {
            using (var image = await Image.LoadAsync(stream))
            {
                using (var memoryStream = new MemoryStream())
                {
                    await image.SaveAsWebpAsync(memoryStream);
                    var webpBytes = memoryStream.ToArray();
                    altUrlImg = urlImg;
                    urlImg = $"data:image/webp;base64,{Convert.ToBase64String(webpBytes)}";
                    thumb.ImageData = webpBytes;
                }
            }
        }
    }

    private void OnReset()
    {
        thumb.X = 50;
        thumb.Y = 50;
        thumb.ScaleImage = 100;
        scaleContainer = 1;
    }

    private void OnSave()
    {
        try
        {
            ThumbManager.UpdateData(thumb,thumb.Id);
        }
        catch (Exception)
        {
            urlImg = altUrlImg;
        }

        altUrlImg = string.Empty;
        Navigation.NavigateTo("/Worlds");
    }


}


<style>
    .Imgcontainer {
        width: @($"{300 * scaleContainer}px");
        min-width: 300px;
        height: @($"{300 * scaleContainer}px");
        min-height: 300px;
        /* background-color: lightgray; */
        display: flex;
        flex-direction: column;
        border: 10px solid black;
    }

    .scaleBorder {
        height: 100%;
        width: 85%;
        /* background-color: blueviolet; */
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .horizontalAlign {
        display: flex;
        width: 100%;
        height: 70%;
    }

    .vSlider {
        height: 100%;
        width: 15%;
        /* background-color: darkcyan; */
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .vSlider > input {
            max-height: 100%;
            max-width: 100%;
        }


    .imgBorder {
        border: 5px solid black;
        border-radius: 50%;
        height: 100%;
        width: 70%;
        background-image: url( @urlImg );
        background-repeat: no-repeat;
        overflow: hidden;
        background-position: @($"{thumb.X}% {thumb.Y}%");
        background-size: @($"{thumb.ScaleImage}%");
    }


    .inLine {
        display: flex;
        width: 100%;
        height: 15%;
    }

    .hSlider {
        height: 100%;
        width: 70%;
        /* background-color: blueviolet; */
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .hSlider > input {
            max-height: 100%;
            max-width: 100%;
        }

    .button {
        height: 100%;
        width: 15%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid black;
    }

    .button:hover {
        background-color: darkslategrey;
            color: white;
    }
</style>